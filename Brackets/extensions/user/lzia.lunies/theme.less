/*
 * Brackets Default Theme
 *
 * Defines all the variables that one can configure in a theme. This should
 * contain all variables / mixins for UI styling that we want to be able to
 * change in a theme.
 *
 * Throughout the rest of the LESS files we should _only_ use color
 * variable names that are on the LHS of the list below. So, if we
 * need a new color for some UI element, we should add a variable
 * in this file.
 */
/* Define some variables used in multiple places */

@background: #081726;
@foreground: #E4F1FE;
/* Code Styling */

.CodeMirror,
.CodeMirror-scroll {
  background-color: @background;
  color: @foreground;
}

.CodeMirror-focused .CodeMirror-activeline-background {
  background: #192734;
}

.show-line-padding .CodeMirror-focused .CodeMirror-activeline-background {
  box-shadow: inset 15px 0 0 0 #000;
}

.CodeMirror-focused .CodeMirror-activeline {
  .CodeMirror-gutter-elt {
    background: rgba(0, 0, 0, 0.2);
    color: #fff;
  }
  .inline-widget .CodeMirror-gutter-elt {
    color: #767676;
  }
}

.cm-string,
.cm-string-2,
.cm-hr {
  color: #FFD9A3;
}

.cm-number,
.cm-attribute,
.cm-plus {
  color: #FFD54C;
}

.cm-def,
.cm-property {
  color: rgba(255, 138, 211, 0.94);
}

.cm-variable,
.cm-variable-2,
.cm-variable-3,
.cm-operator,
.cm-meta,
.cm-bracket {
  color: @foreground;
}

.cm-comment {
  color: #8C97A2;
}

.cm-error,
.cm-minus {
  color: #dc322f;
}

.cm-header {
  color: #d85896;
}

.cm-link {
  color: #b77fdb;
  text-decoration: none;
}

.cm-rangeinfo {
  color: #6c71c4;
}

.cm-keyword,
.cm-qualifier,
.cm-builtin,
.cm-tag,
.cm-quote {
  color: #5FAAF2;
}
/* Extra CSS */

.CodeMirror-searching {
  background-color: #f5f1b1;
  &.searching-current-match {
    background-color: #f6a644;
  }
}

.CodeMirror-cursor {
  border-left: 1px solid #c5c8c6 !important;
}

.CodeMirror-gutters {
  background-color: @background;
  border-right: none;
}

.CodeMirror-linenumber {
  color: #7793AE;
}

.CodeMirror .CodeMirror-selected {
  background: #333f48;
}

.CodeMirror-focused .CodeMirror-selected {
  background: #3C3A60;
}

.CodeMirror-matchingbracket,
.CodeMirror-matchingtag {
  /* Ensure visibility against gray inline editor background */
  background-color: #195c74;
  color: @foreground !important;
}

.CodeMirror-overwrite .CodeMirror-cursor {
  border-left: none !important;
  border-bottom: 1px solid #fff;
}

/*
    CodeMirror's use of descendant selectors for certain styling causes problems when editors are
    nested because, for items in the inner editor, the left-hand clause in the selector will now
    match either the actual containing CodeMirror instance *OR* the outer "host" CodeMirror instance.
*/

.CodeMirror {
  .CodeMirror {
    background: transparent;
  }
  .CodeMirror .CodeMirror-gutters {
    background: transparent;
    border-right: none;
  }
  .CodeMirror .CodeMirror-activeline-background {
    background: transparent;
  }
  .CodeMirror .CodeMirror-activeline .CodeMirror-gutter-elt {
    background: transparent;
    color: #767676;
  }
  .CodeMirror-focused .CodeMirror-activeline-background {
    background: #2f2f2f;
  }
  .CodeMirror-focused .CodeMirror-activeline {
    .CodeMirror-gutter-elt {
      background: rgba(0, 0, 0, 0.2);
      color: #fff;
    }
  }
}

.CodeMirror-foldgutter-open:after {
  color: #538490;
}

.CodeMirror-foldgutter-folded:after {
  color: #538490;
}

.CodeMirror.over-gutter,
.CodeMirror-activeline {
  .CodeMirror-foldgutter-open:after {
    color: #538490;
  }
}

.CodeMirror-foldmarker {
  border-color: #000;
  color: @foreground;
  background-color: #33484d;
}
/* Non-editor styling */

.image-view,
.not-editor {
  background-color: @background;
}

.view-pane .image-view {
  color: @foreground;
}
